(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    269351,       5718]
NotebookOptionsPosition[    267841,       5671]
NotebookOutlinePosition[    268184,       5686]
CellTagsIndexPosition[    268141,       5683]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"T0mat", "[", "h_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["2", 
         SuperscriptBox["h", "3"]]}], ",", 
       FractionBox["1", 
        SuperscriptBox["h", "2"]], ",", 
       FractionBox["1", 
        SuperscriptBox["h", "2"]]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["3", 
        SuperscriptBox["h", "2"]], ",", 
       RowBox[{"-", 
        FractionBox["2", "h"]}], ",", 
       RowBox[{"-", 
        FractionBox["1", "h"]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tmat", "[", 
    RowBox[{"i_", ",", "h_"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "i"}]}], 
        RowBox[{
         SuperscriptBox["h", "4"], " ", 
         SuperscriptBox["i", "2"]}]], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         RowBox[{"2", " ", "i"}]}], 
        RowBox[{
         SuperscriptBox["h", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "i"}], ")"}], "2"]}]], ",", 
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["h", "3"], " ", "i"}]], ",", 
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["h", "3"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}]}]]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["i", "2"]}]}], 
        RowBox[{
         SuperscriptBox["h", "3"], " ", 
         SuperscriptBox["i", "2"]}]], ",", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"6", " ", "i"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["i", "2"]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["h", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "i"}], ")"}], "2"]}]], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", "+", 
          RowBox[{"3", " ", "i"}]}], 
         RowBox[{
          SuperscriptBox["h", "2"], " ", "i"}]]}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"3", " ", "i"}]}], 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}]}]]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"3", " ", "i"}], "+", 
           RowBox[{"6", " ", 
            SuperscriptBox["i", "2"]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox["i", "2"]}]], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"i", " ", 
          RowBox[{"(", 
           RowBox[{"8", "+", 
            RowBox[{"15", " ", "i"}], "+", 
            RowBox[{"6", " ", 
             SuperscriptBox["i", "2"]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["h", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "i"}], ")"}], "2"]}]]}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", " ", "i"}]}], ")"}]}], 
        RowBox[{"h", " ", "i"}]], ",", 
       FractionBox[
        RowBox[{"i", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"3", " ", "i"}]}], ")"}]}], 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}]}]]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "i"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "i"}], ")"}], "2"]}], 
         RowBox[{"h", " ", "i"}]]}], ",", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["i", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "i"}], ")"}]}], 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}]}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], "2"]}], ",", 
       RowBox[{"-", 
        SuperscriptBox["i", "2"]}]}], "}"}]}], "}"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Pbar", "[", 
    RowBox[{"i_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["2", "9"]}], " ", 
         SuperscriptBox["h", "9"], " ", 
         SuperscriptBox["i", "9"]}], "+", 
        RowBox[{
         FractionBox["2", "9"], " ", 
         SuperscriptBox["h", "9"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "i"}], ")"}], "9"]}]}], ",", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "8"]}], " ", 
           SuperscriptBox["i", "8"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "8"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "8"]}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["2", "7"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "7"]}], " ", 
           SuperscriptBox["i", "7"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "7"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "7"]}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "6"]}], " ", 
           SuperscriptBox["i", "6"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "6"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "6"]}]}], ")"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "8"]}], " ", 
           SuperscriptBox["i", "8"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "8"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "8"]}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["2", "7"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "7"]}], " ", 
           SuperscriptBox["i", "7"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "7"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "7"]}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "6"]}], " ", 
           SuperscriptBox["i", "6"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "6"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "6"]}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["2", "5"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "5"]}], " ", 
           SuperscriptBox["i", "5"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "5"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "5"]}]}], ")"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["2", "7"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "7"]}], " ", 
           SuperscriptBox["i", "7"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "7"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "7"]}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "6"]}], " ", 
           SuperscriptBox["i", "6"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "6"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "6"]}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["2", "5"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "5"]}], " ", 
           SuperscriptBox["i", "5"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "5"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "5"]}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "4"]}], " ", 
           SuperscriptBox["i", "4"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "4"]}]}], ")"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "6"]}], " ", 
           SuperscriptBox["i", "6"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "6"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "6"]}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["2", "5"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "5"]}], " ", 
           SuperscriptBox["i", "5"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "5"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "5"]}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "4"]}], " ", 
           SuperscriptBox["i", "4"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "4"]}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["2", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "3"]}], " ", 
           SuperscriptBox["i", "3"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "3"]}]}], ")"}]}]}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ptmat", "[", 
   RowBox[{"i_", ",", "h_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"4", " ", "i"}], "-", 
          RowBox[{"17", " ", 
           SuperscriptBox["i", "2"]}], "+", 
          RowBox[{"42", " ", 
           SuperscriptBox["i", "3"]}], "+", 
          RowBox[{"234", " ", 
           SuperscriptBox["i", "4"]}]}], ")"}]}], 
       RowBox[{"315", " ", 
        SuperscriptBox["i", "4"]}]], ",", 
      FractionBox[
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "15"}], " ", "i"}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["i", "2"]}], "+", 
          RowBox[{"154", " ", 
           SuperscriptBox["i", "3"]}], "+", 
          RowBox[{"324", " ", 
           SuperscriptBox["i", "4"]}], "+", 
          RowBox[{"162", " ", 
           SuperscriptBox["i", "5"]}]}], ")"}]}], 
       RowBox[{"630", " ", 
        SuperscriptBox["i", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], "2"]}]], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["h", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "-", "i", "+", 
          RowBox[{"60", " ", 
           SuperscriptBox["i", "2"]}], "+", 
          RowBox[{"132", " ", 
           SuperscriptBox["i", "3"]}]}], ")"}]}], 
       RowBox[{"1260", " ", 
        SuperscriptBox["i", "3"]}]]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "15"}], " ", "i"}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["i", "2"]}], "+", 
          RowBox[{"154", " ", 
           SuperscriptBox["i", "3"]}], "+", 
          RowBox[{"324", " ", 
           SuperscriptBox["i", "4"]}], "+", 
          RowBox[{"162", " ", 
           SuperscriptBox["i", "5"]}]}], ")"}]}], 
       RowBox[{"630", " ", 
        SuperscriptBox["i", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], "2"]}]], ",", 
      FractionBox[
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"360", " ", 
           SuperscriptBox["i", "3"]}], "+", 
          RowBox[{"1560", " ", 
           SuperscriptBox["i", "4"]}], "+", 
          RowBox[{"2522", " ", 
           SuperscriptBox["i", "5"]}], "+", 
          RowBox[{"1788", " ", 
           SuperscriptBox["i", "6"]}], "+", 
          RowBox[{"468", " ", 
           SuperscriptBox["i", "7"]}]}], ")"}]}], 
       RowBox[{"630", " ", 
        SuperscriptBox["i", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], "4"]}]], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["h", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"30", " ", "i"}], "+", 
          RowBox[{"127", " ", 
           SuperscriptBox["i", "2"]}], "+", 
          RowBox[{"180", " ", 
           SuperscriptBox["i", "3"]}], "+", 
          RowBox[{"78", " ", 
           SuperscriptBox["i", "4"]}]}], ")"}]}], 
       RowBox[{"1260", " ", 
        SuperscriptBox["i", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], "2"]}]]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["h", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "-", "i", "+", 
          RowBox[{"60", " ", 
           SuperscriptBox["i", "2"]}], "+", 
          RowBox[{"132", " ", 
           SuperscriptBox["i", "3"]}]}], ")"}]}], 
       RowBox[{"1260", " ", 
        SuperscriptBox["i", "3"]}]], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["h", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"30", " ", "i"}], "+", 
          RowBox[{"127", " ", 
           SuperscriptBox["i", "2"]}], "+", 
          RowBox[{"180", " ", 
           SuperscriptBox["i", "3"]}], "+", 
          RowBox[{"78", " ", 
           SuperscriptBox["i", "4"]}]}], ")"}]}], 
       RowBox[{"1260", " ", 
        SuperscriptBox["i", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], "2"]}]], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["h", "3"], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"9", " ", "i"}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox["i", "2"]}]}], ")"}]}], 
       RowBox[{"630", " ", 
        SuperscriptBox["i", "2"]}]]}], "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.923755779543066*^9, 3.923755780642505*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Qbar", "[", 
    RowBox[{"i_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["24", "7"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "7"]}], " ", 
            SuperscriptBox["i", "7"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "7"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "7"]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "8"]}], " ", 
            SuperscriptBox["i", "8"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "8"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "8"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "6"]}], " ", 
            SuperscriptBox["i", "6"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "6"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "6"]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["4", "7"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "7"]}], " ", 
            SuperscriptBox["i", "7"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "7"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "7"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         FractionBox["4", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "5"]}], " ", 
            SuperscriptBox["i", "5"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "5"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "5"]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["2", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "6"]}], " ", 
            SuperscriptBox["i", "6"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "6"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "6"]}]}], ")"}]}]}], ",", 
       RowBox[{
        FractionBox["4", "5"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "5"]}], " ", 
           SuperscriptBox["i", "5"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "5"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "5"]}]}], ")"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "6"]}], " ", 
            SuperscriptBox["i", "6"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "6"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "6"]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["4", "7"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "7"]}], " ", 
            SuperscriptBox["i", "7"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "7"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "7"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         FractionBox["12", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "5"]}], " ", 
            SuperscriptBox["i", "5"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "5"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "5"]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["2", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "6"]}], " ", 
            SuperscriptBox["i", "6"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "6"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "6"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["h", "4"]}], " ", 
         SuperscriptBox["i", "4"]}], "+", 
        RowBox[{
         SuperscriptBox["h", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "i"}], ")"}], "4"]}], "+", 
        RowBox[{
         FractionBox["4", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "5"]}], " ", 
            SuperscriptBox["i", "5"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "5"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "5"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["h", "4"]}], " ", 
         SuperscriptBox["i", "4"]}], "+", 
        RowBox[{
         SuperscriptBox["h", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "i"}], ")"}], "4"]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["24", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "5"]}], " ", 
            SuperscriptBox["i", "5"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "5"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "5"]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["2", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "6"]}], " ", 
            SuperscriptBox["i", "6"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "6"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "6"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "4"]}], " ", 
            SuperscriptBox["i", "4"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "4"]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["4", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "5"]}], " ", 
            SuperscriptBox["i", "5"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "5"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "5"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["h", "4"]}], " ", 
         SuperscriptBox["i", "4"]}], "+", 
        RowBox[{
         SuperscriptBox["h", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "i"}], ")"}], "4"]}], "+", 
        RowBox[{
         FractionBox["4", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "3"]}], " ", 
            SuperscriptBox["i", "3"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "3"]}]}], ")"}]}]}], ",", 
       RowBox[{
        FractionBox["4", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "3"]}], " ", 
           SuperscriptBox["i", "3"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "3"]}]}], ")"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "4"]}], " ", 
            SuperscriptBox["i", "4"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "4"]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["4", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "5"]}], " ", 
            SuperscriptBox["i", "5"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "5"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "5"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["h", "4"]}], " ", 
         SuperscriptBox["i", "4"]}], "+", 
        RowBox[{
         SuperscriptBox["h", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "i"}], ")"}], "4"]}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "3"]}], " ", 
            SuperscriptBox["i", "3"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "3"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "2"]}], " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "2"]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["4", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["h", "3"]}], " ", 
            SuperscriptBox["i", "3"]}], "+", 
           RowBox[{
            SuperscriptBox["h", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "i"}], ")"}], "3"]}]}], ")"}]}]}], ",", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["h", "2"]}], " ", 
           SuperscriptBox["i", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["h", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "i"}], ")"}], "2"]}]}], ")"}]}]}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qtmat", "[", 
   RowBox[{"i_", ",", "h_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"20", " ", "i"}], "-", 
           RowBox[{"16", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"312", " ", 
            SuperscriptBox["i", "3"]}]}], ")"}]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"4", " ", "i"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"63", " ", 
            SuperscriptBox["i", "4"]}]}], ")"}]}]}], 
       RowBox[{"210", " ", "h", " ", 
        SuperscriptBox["i", "4"]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "17"}], "+", 
           RowBox[{"20", " ", "i"}], "+", 
           RowBox[{"162", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"108", " ", 
            SuperscriptBox["i", "3"]}]}], ")"}]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"4", " ", "i"}], "+", 
           RowBox[{"67", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"126", " ", 
            SuperscriptBox["i", "3"]}], "+", 
           RowBox[{"63", " ", 
            SuperscriptBox["i", "4"]}]}], ")"}]}]}], 
       RowBox[{"210", " ", "h", " ", 
        SuperscriptBox["i", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], "2"]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"6", " ", "i"}], "+", 
           RowBox[{"44", " ", 
            SuperscriptBox["i", "2"]}]}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "i", "+", 
           RowBox[{"14", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"231", " ", 
            SuperscriptBox["i", "3"]}]}], ")"}]}]}], 
       RowBox[{"210", " ", 
        SuperscriptBox["i", "3"]}]]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "17"}], "+", 
           RowBox[{"20", " ", "i"}], "+", 
           RowBox[{"162", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"108", " ", 
            SuperscriptBox["i", "3"]}]}], ")"}]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"4", " ", "i"}], "+", 
           RowBox[{"67", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"126", " ", 
            SuperscriptBox["i", "3"]}], "+", 
           RowBox[{"63", " ", 
            SuperscriptBox["i", "4"]}]}], ")"}]}]}], 
       RowBox[{"210", " ", "h", " ", 
        SuperscriptBox["i", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], "2"]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"305", "+", 
           RowBox[{"948", " ", "i"}], "+", 
           RowBox[{"952", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"312", " ", 
            SuperscriptBox["i", "3"]}]}], ")"}]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"72", "+", 
           RowBox[{"264", " ", "i"}], "+", 
           RowBox[{"382", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"252", " ", 
            SuperscriptBox["i", "3"]}], "+", 
           RowBox[{"63", " ", 
            SuperscriptBox["i", "4"]}]}], ")"}]}]}], 
       RowBox[{"210", " ", "h", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], "4"]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"17", "+", 
           RowBox[{"46", " ", "i"}], "+", 
           RowBox[{"26", " ", 
            SuperscriptBox["i", "2"]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"12", "+", 
           RowBox[{"50", " ", "i"}], "+", 
           RowBox[{"56", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"21", " ", 
            SuperscriptBox["i", "3"]}]}], ")"}]}]}], 
       RowBox[{"210", " ", "i", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], "2"]}]]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"6", " ", "i"}], "+", 
           RowBox[{"44", " ", 
            SuperscriptBox["i", "2"]}]}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "i", "+", 
           RowBox[{"14", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"21", " ", 
            SuperscriptBox["i", "3"]}]}], ")"}]}]}], 
       RowBox[{"210", " ", 
        SuperscriptBox["i", "3"]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"17", "+", 
           RowBox[{"46", " ", "i"}], "+", 
           RowBox[{"26", " ", 
            SuperscriptBox["i", "2"]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"12", "+", 
           RowBox[{"50", " ", "i"}], "+", 
           RowBox[{"56", " ", 
            SuperscriptBox["i", "2"]}], "+", 
           RowBox[{"21", " ", 
            SuperscriptBox["i", "3"]}]}], ")"}]}]}], 
       RowBox[{"210", " ", "i", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "i"}], ")"}], "2"]}]], ",", 
      FractionBox[
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"8", " ", "i"}]}], ")"}]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"7", " ", "i"}], "+", 
             RowBox[{"14", " ", 
              SuperscriptBox["i", "2"]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{"210", " ", 
        SuperscriptBox["i", "2"]}]]}], "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.9237557893626986`*^9, 3.923755790332331*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "make", " ", "the", " ", "entire", " ", "P", " ", "or", " ", "Q", " ", 
    "matrix"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"makePorQ", "[", 
    RowBox[{"N_", ",", "PorQbar_", ",", "PorQtmat_", ",", "tail_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"h", "=", 
        RowBox[{"1", "/", "N"}]}], ",", 
       RowBox[{"res", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "N"}], ",", 
            RowBox[{"2", "N"}]}], "}"}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"deal", " ", "with", " ", "the", " ", "head"}], ",", " ", 
       RowBox[{"i", "=", "0"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Tmat0", "=", 
       RowBox[{"T0mat", "[", "h", "]"}]}], ";", 
      RowBox[{"PorQbar0", "=", 
       RowBox[{
        RowBox[{"PorQbar", "[", 
         RowBox[{"0", ",", "h"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"N", "+", "1"}], ",", 
            RowBox[{"N", "+", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"N", "+", "1"}], ",", 
            RowBox[{"N", "+", "2"}]}], "}"}]}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Transpose", "[", "Tmat0", "]"}], ".", "PorQbar0", ".", 
        "Tmat0"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"deal", " ", "with", " ", "the", " ", "body"}], ",", " ", 
        RowBox[{"0", "<", "i", "<", 
         RowBox[{"N", "-", "1"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Tmati", "=", 
          RowBox[{"Tmat", "[", 
           RowBox[{"i", ",", "h"}], "]"}]}], ";", 
         RowBox[{"PorQbari", "=", 
          RowBox[{"PorQbar", "[", 
           RowBox[{"i", ",", "h"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"i", "+", "1"}], ",", 
               RowBox[{"N", "+", "i", "+", "1"}], ",", 
               RowBox[{"N", "+", "i", "+", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"i", "+", "1"}], ",", 
               RowBox[{"N", "+", "i", "+", "1"}], ",", 
               RowBox[{"N", "+", "i", "+", "2"}]}], "}"}]}], "]"}], "]"}], "+=", 
          RowBox[{
           RowBox[{"Transpose", "[", "Tmati", "]"}], ".", "PorQbari", ".", 
           "Tmati"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"N", "-", "2"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"deal", " ", "with", " ", "the", " ", "tail"}], ",", " ", 
        RowBox[{"i", "=", 
         RowBox[{"N", "-", "1"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"N", "-", "1"}], ",", "N", ",", 
            RowBox[{"2", "N"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"N", "-", "1"}], ",", "N", ",", 
            RowBox[{"2", "N"}]}], "}"}]}], "]"}], "]"}], "+=", 
       RowBox[{"PorQtmat", "[", 
        RowBox[{
         RowBox[{"N", "-", "1"}], ",", "h"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"deal", " ", "with", " ", "the", " ", "actual", " ", "tail"}],
         ",", " ", 
        RowBox[{"i", "=", "N"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "[", 
        RowBox[{"[", 
         RowBox[{"N", ",", "N"}], "]"}], "]"}], "+=", "tail"}], ";", 
      "\[IndentingNewLine]", "res"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9237558048930607`*^9, 3.9237558457741003`*^9}, 
   3.923756176258607*^9, {3.9237564360207577`*^9, 3.923756442090629*^9}, 
   3.923756506094407*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]exact", "[", "r_", "]"}], ":=", 
   RowBox[{"2", "r", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", "r"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]q", "[", 
     RowBox[{"D_", ",", "C_", ",", "B_", ",", "A_", ",", "r_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"D", " ", "r"}], "+", 
     RowBox[{"C", " ", 
      SuperscriptBox["r", "2"]}], "+", 
     RowBox[{"B", " ", 
      SuperscriptBox["r", "3"]}], "+", 
     RowBox[{"A", " ", 
      SuperscriptBox["r", "4"]}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"q", ":", " ", "quartic"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]t", "[", 
     RowBox[{"rN_", ",", "\[Psi]N_", ",", "r_"}], "]"}], ":=", 
    RowBox[{"\[Psi]N", 
     FractionBox["r", "rN"], 
     RowBox[{"Exp", "[", 
      RowBox[{"1", "-", 
       FractionBox["r", "rN"]}], "]"}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"t", ":", " ", "tail"}], " ", "*)"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "integrate", " ", "the", " ", "square", " ", "of", " ", "a", " ", 
    "function", " ", "in", " ", "an", " ", "interval"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"intsqq", "[", 
      RowBox[{"D_", ",", "C_", ",", "B_", ",", "A_", ",", "r0_", ",", "rh_"}],
       "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "3"]}], " ", 
       SuperscriptBox["D", "2"], " ", 
       SuperscriptBox["r0", "3"]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "C", " ", "D", " ", 
       SuperscriptBox["r0", "4"]}], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["C", "2"], " ", 
        SuperscriptBox["r0", "5"]}], "5"], "-", 
      RowBox[{
       FractionBox["2", "5"], " ", "B", " ", "D", " ", 
       SuperscriptBox["r0", "5"]}], "-", 
      RowBox[{
       FractionBox["1", "3"], " ", "B", " ", "C", " ", 
       SuperscriptBox["r0", "6"]}], "-", 
      RowBox[{
       FractionBox["1", "3"], " ", "A", " ", "D", " ", 
       SuperscriptBox["r0", "6"]}], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["B", "2"], " ", 
        SuperscriptBox["r0", "7"]}], "7"], "-", 
      RowBox[{
       FractionBox["2", "7"], " ", "A", " ", "C", " ", 
       SuperscriptBox["r0", "7"]}], "-", 
      RowBox[{
       FractionBox["1", "4"], " ", "A", " ", "B", " ", 
       SuperscriptBox["r0", "8"]}], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["A", "2"], " ", 
        SuperscriptBox["r0", "9"]}], "9"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["D", "2"], " ", 
        SuperscriptBox["rh", "3"]}], "3"], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "C", " ", "D", " ", 
       SuperscriptBox["rh", "4"]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["C", "2"], " ", 
        SuperscriptBox["rh", "5"]}], "5"], "+", 
      RowBox[{
       FractionBox["2", "5"], " ", "B", " ", "D", " ", 
       SuperscriptBox["rh", "5"]}], "+", 
      RowBox[{
       FractionBox["1", "3"], " ", "B", " ", "C", " ", 
       SuperscriptBox["rh", "6"]}], "+", 
      RowBox[{
       FractionBox["1", "3"], " ", "A", " ", "D", " ", 
       SuperscriptBox["rh", "6"]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["B", "2"], " ", 
        SuperscriptBox["rh", "7"]}], "7"], "+", 
      RowBox[{
       FractionBox["2", "7"], " ", "A", " ", "C", " ", 
       SuperscriptBox["rh", "7"]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", "A", " ", "B", " ", 
       SuperscriptBox["rh", "8"]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["A", "2"], " ", 
        SuperscriptBox["rh", "9"]}], "9"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "integrate", " ", "the", " ", "square", " ", "of", " ", "a", " ", 
     "function", " ", "in", " ", "the", " ", "tail"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]tail", "[", 
        RowBox[{"rN", ",", "\[Psi]N", ",", "r"}], "]"}], "^", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "rN", ",", "Infinity"}], "}"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"rN", ">", "0"}]}]}], "]"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"intsqt", "[", 
      RowBox[{"rN_", ",", "\[Psi]N_"}], "]"}], ":=", 
     FractionBox[
      RowBox[{"5", " ", "rN", " ", 
       SuperscriptBox["\[Psi]N", "2"]}], "4"]}], ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"normalN", "[", 
    RowBox[{"\[Psi]_", ",", "N_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", "=", 
       RowBox[{"1", "/", "N"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"res", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"deal", " ", "with", " ", "the", " ", "head"}], ",", " ", 
        RowBox[{"i", "=", "0"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"BB", ",", "CC", ",", "DD"}], "}"}], "=", 
       RowBox[{
        RowBox[{"T0mat", "[", "h", "]"}], ".", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"N", "+", "1"}], ",", 
            RowBox[{"N", "+", "2"}]}], "}"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "+=", 
       RowBox[{"intsqq", "[", 
        RowBox[{"DD", ",", "CC", ",", "BB", ",", "0", ",", "0", ",", "h"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"deal", " ", "with", " ", "the", " ", "body"}], ",", " ", 
        RowBox[{"0", "<", "i", "<", 
         RowBox[{"N", "-", "1"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"AA", ",", "BB", ",", "CC", ",", "DD"}], "}"}], "=", 
          RowBox[{
           RowBox[{"Tmat", "[", 
            RowBox[{"i", ",", "h"}], "]"}], ".", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"i", "+", "1"}], ",", 
               RowBox[{"N", "+", "i", "+", "1"}], ",", 
               RowBox[{"N", "+", "i", "+", "2"}]}], "}"}], "]"}], "]"}]}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"res", "+=", 
          RowBox[{"intsqq", "[", 
           RowBox[{"DD", ",", "CC", ",", "BB", ",", "AA", ",", 
            RowBox[{"i", " ", "h"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "+", "1"}], ")"}], "h"}]}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"N", "-", "2"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"deal", " ", "with", " ", "the", " ", "tail"}], ",", " ", 
        RowBox[{"i", "=", 
         RowBox[{"N", "-", "1"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"AA", ",", "BB", ",", "CC", ",", "DD"}], "}"}], "=", 
       RowBox[{
        RowBox[{"Tmat", "[", 
         RowBox[{
          RowBox[{"N", "-", "1"}], ",", "h"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"\[Psi]", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"N", "-", "1"}], ",", "N", ",", 
               RowBox[{"2", "N"}]}], "}"}], "]"}], "]"}], ",", 
           RowBox[{"{", "0", "}"}]}], "]"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "+=", 
       RowBox[{"intsqq", "[", 
        RowBox[{"DD", ",", "CC", ",", "BB", ",", "AA", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"N", "-", "1"}], ")"}], " ", "h"}], ",", "1"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"deal", " ", "with", " ", "the", " ", "actual", " ", "tail"}],
         ",", " ", 
        RowBox[{"i", "=", "N"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"res", "+=", 
       RowBox[{"intsqt", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"[", "N", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "res", "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.9237558935839076`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"renderN", "[", 
   RowBox[{"\[Psi]_", ",", "N_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{"r", "*", "N"}], "]"}]}], ",", 
      RowBox[{"h", "=", 
       RowBox[{"1", "/", "N"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[GreaterEqual]", "N"}], ",", 
       RowBox[{"res", "=", 
        RowBox[{"\[Psi]t", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"[", "N", "]"}], "]"}], ",", "r"}], "]"}]}], ","}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"BB", ",", "CC", ",", "DD"}], "}"}], "=", 
         RowBox[{
          RowBox[{"T0mat", "[", "h", "]"}], ".", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"N", "+", "1"}], ",", 
              RowBox[{"N", "+", "2"}]}], "}"}], "]"}], "]"}]}]}], ";", 
        RowBox[{"res", "=", 
         RowBox[{"\[Psi]q", "[", 
          RowBox[{"DD", ",", "CC", ",", "BB", ",", "0", ",", "r"}], "]"}]}]}],
        ","}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"0", "<", "i", "<", 
        RowBox[{"N", "-", "1"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"AA", ",", "BB", ",", "CC", ",", "DD"}], "}"}], "=", 
         RowBox[{
          RowBox[{"Tmat", "[", 
           RowBox[{"i", ",", "h"}], "]"}], ".", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"N", "+", "i", "+", "1"}], ",", 
              RowBox[{"N", "+", "i", "+", "2"}]}], "}"}], "]"}], "]"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"\[Psi]q", "[", 
          RowBox[{"DD", ",", "CC", ",", "BB", ",", "AA", ",", "r"}], 
          "]"}]}]}], ","}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", 
        RowBox[{"N", "-", "1"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"AA", ",", "BB", ",", "CC", ",", "DD"}], "}"}], "=", 
         RowBox[{
          RowBox[{"Tmat", "[", 
           RowBox[{
            RowBox[{"N", "-", "1"}], ",", "h"}], "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"\[Psi]", "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"N", "-", "1"}], ",", "N", ",", 
                 RowBox[{"2", "N"}]}], "}"}], "]"}], "]"}], ",", 
             RowBox[{"{", "0", "}"}]}], "]"}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"\[Psi]q", "[", 
          RowBox[{"DD", ",", "CC", ",", "BB", ",", "AA", ",", "r"}], 
          "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", "res"}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExploreN", "[", "NN_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myPP", "=", 
      RowBox[{"makePorQ", "[", 
       RowBox[{"NN", ",", "Pbar", ",", "Ptmat", ",", 
        RowBox[{"5", "/", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myQQ", "=", 
      RowBox[{"makePorQ", "[", 
       RowBox[{"NN", ",", "Qbar", ",", "Qtmat", ",", 
        RowBox[{"5", "/", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myHH", "=", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Inverse", "[", "myPP", "]"}], ".", "myQQ"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myEE", ",", "my\[Psi]\[Psi]"}], "}"}], "=", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{"N", "[", 
        RowBox[{"myHH", ",", "16"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"myE", "=", 
      RowBox[{"myEE", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
     RowBox[{"my\[Psi]", "=", 
      RowBox[{
       RowBox[{"Sign", "[", 
        RowBox[{"my\[Psi]\[Psi]", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"NN", "+", "1"}]}], "]"}], "]"}], "]"}], "*", 
       RowBox[{"normalN", "[", 
        RowBox[{
         RowBox[{"my\[Psi]\[Psi]", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", "NN"}], "]"}], "*", 
       RowBox[{"my\[Psi]\[Psi]", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"myE", ",", "my\[Psi]"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9237568646356387`*^9, 3.923757249045663*^9}, {
  3.9237573753944483`*^9, 3.9237574130743876`*^9}, {3.923757453114419*^9, 
  3.9237574657114277`*^9}, {3.92375751749059*^9, 3.923757632891384*^9}, {
  3.923757668576167*^9, 3.9237577108778014`*^9}, {3.9237577511218266`*^9, 
  3.923757760953068*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotN", "[", "NN_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myPP", "=", 
      RowBox[{"makePorQ", "[", 
       RowBox[{"NN", ",", "Pbar", ",", "Ptmat", ",", 
        RowBox[{"5", "/", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"MatrixPlot", "[", "myPP", "]"}], "\[IndentingNewLine]", 
       "myQQ"}], "=", 
      RowBox[{"makePorQ", "[", 
       RowBox[{"NN", ",", "Qbar", ",", "Qtmat", ",", 
        RowBox[{"5", "/", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"MatrixPlot", "[", "myQQ", "]"}], "\[IndentingNewLine]", 
       "myHH"}], "=", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Inverse", "[", "myPP", "]"}], ".", "myQQ"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"MatrixPlot", "[", "myHH", "]"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"myEE", ",", "my\[Psi]\[Psi]"}], "}"}]}], "=", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{"N", "[", 
        RowBox[{"HH2", ",", "16"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"myE", "=", 
      RowBox[{"myEE", "[", 
       RowBox[{"[", 
        RowBox[{"-", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"my\[Psi]", "=", 
      RowBox[{
       RowBox[{"Sign", "[", 
        RowBox[{"my\[Psi]\[Psi]", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"NN", "+", "1"}]}], "]"}], "]"}], "]"}], "*", 
       RowBox[{"normalN", "[", 
        RowBox[{
         RowBox[{"my\[Psi]\[Psi]", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", "NN"}], "]"}], "*", 
       RowBox[{"my\[Psi]\[Psi]", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Psi]exact", "[", "r", "]"}], ",", 
          RowBox[{"renderN", "[", 
           RowBox[{"my\[Psi]", ",", "NN", ",", "r"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "2"}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.923757946268127*^9, 3.9237579545381627`*^9}, {
   3.9237579898881416`*^9, 3.923758033818225*^9}, 3.9237580791219378`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"N", " ", "=", " ", 
    RowBox[{"2", " ", "case"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NN", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myPP", "=", 
     RowBox[{"makePorQ", "[", 
      RowBox[{"NN", ",", "Pbar", ",", "Ptmat", ",", 
       RowBox[{"5", "/", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"MatrixPlot", "[", "myPP", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myQQ", "=", 
     RowBox[{"makePorQ", "[", 
      RowBox[{"NN", ",", "Qbar", ",", "Qtmat", ",", 
       RowBox[{"5", "/", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"MatrixPlot", "[", "myQQ", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myHH", "=", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"Inverse", "[", "myPP", "]"}], ".", "myQQ"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MatrixPlot", "[", "myHH", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"myEE", ",", "my\[Psi]\[Psi]"}], "}"}], "=", 
     RowBox[{"Eigensystem", "[", 
      RowBox[{"N", "[", 
       RowBox[{"myHH", ",", "16"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myE", "=", 
     RowBox[{"myEE", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"my\[Psi]", "=", 
     RowBox[{
      RowBox[{"Sign", "[", 
       RowBox[{"my\[Psi]\[Psi]", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"NN", "+", "1"}]}], "]"}], "]"}], "]"}], "*", 
      RowBox[{"normalN", "[", 
       RowBox[{
        RowBox[{"my\[Psi]\[Psi]", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], ",", "NN"}], "]"}], "*", 
      RowBox[{"my\[Psi]\[Psi]", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Psi]exact", "[", "r", "]"}], ",", 
       RowBox[{"renderN", "[", 
        RowBox[{"my\[Psi]", ",", "NN", ",", "r"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9237559914677467`*^9, 3.9237560028235865`*^9}, {
   3.9237577665117483`*^9, 3.923757795045976*^9}, {3.923757843555461*^9, 
   3.923757923988696*^9}, {3.92375799858836*^9, 3.9237580065944433`*^9}, {
   3.923758082703533*^9, 3.9237580915537143`*^9}, 3.9237581499133224`*^9, 
   3.923758200274791*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQ+4K89hyxh2/t33M9uHz02Gv7U+m2PYoOT+2z49Zz
Tot/az95+p4TWXdf2nNdNYxxc39g38lmnFA6/7X9O7HDVptnvLWfwfIrrnjq
O/v1IYFPViq+s3/zz8jr5K439jUGYWev7Hpufy73ennKgrf2Uw+dP+B76ZV9
GM+Mn3ZHHtkzgMEHDHoT21KOmKR39i7uzrGO69/av+3+Hb/d7BVOe825E8vv
ML61n9++PMkl6oW9yZwqp44nN+HmPawSWef+8BaUDwOY9uLyr+nFg5YrRd/Y
t7xLnxAa+MTeKOzd4gPcR3Dai8u/uMIZAGG3rxA=
   "], {{0, 0}, {4, 4}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{3.5, 
       FormBox["1", TraditionalForm]}, {2.5, 
       FormBox["2", TraditionalForm]}, {1.5, 
       FormBox["3", TraditionalForm]}, {0.5, 
       FormBox["4", TraditionalForm]}}, {{3.5, 
       FormBox["1", TraditionalForm]}, {2.5, 
       FormBox["2", TraditionalForm]}, {1.5, 
       FormBox["3", TraditionalForm]}, {0.5, 
       FormBox["4", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.923756003071441*^9, 3.9237563345125775`*^9, 3.923756534538599*^9, 
   3.923757281176355*^9, {3.92375776983307*^9, 3.9237577970415993`*^9}, 
   3.923757851591174*^9, 3.923757924398569*^9, {3.9237580073292847`*^9, 
   3.923758036053969*^9}, {3.9237580682932405`*^9, 3.923758091923279*^9}, 
   3.9237581614659243`*^9, 3.9237582010081224`*^9, 3.9237592636521077`*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQ+8Ox/y5iko/tWY2Ezskcf2HPc/7E7agdr+23vXgT
e8fyrf0D4d9v7/i9tH99bFnq1xV37UvSUmQeGb+zL1jcobPo/xv7xfrKS1/k
vrAXCLMKt9l00945k61ql91T+0nLrzx9Ou+l/WfFKOO61W/tV658/Nb+zyv7
3SE9TyMNH9szgMEHDPrAvFfa/M9e2Levcp9Zx/fGfkGC4EY9oH5c9l4NeFHJ
1/bWfvLV+0pHzty3r1jF9+tDf769g0D215rLl+z7T3pUrGB4ZD/DMk7jRcMr
nPbi8q+WfNOqi6sv2CcJRFhuOXHN/rawyrbd7W9w2ovLv7jCGQApxL+U
   "], {{0, 0}, {4, 4}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{3.5, 
       FormBox["1", TraditionalForm]}, {2.5, 
       FormBox["2", TraditionalForm]}, {1.5, 
       FormBox["3", TraditionalForm]}, {0.5, 
       FormBox["4", TraditionalForm]}}, {{3.5, 
       FormBox["1", TraditionalForm]}, {2.5, 
       FormBox["2", TraditionalForm]}, {1.5, 
       FormBox["3", TraditionalForm]}, {0.5, 
       FormBox["4", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.923756003071441*^9, 3.9237563345125775`*^9, 3.923756534538599*^9, 
   3.923757281176355*^9, {3.92375776983307*^9, 3.9237577970415993`*^9}, 
   3.923757851591174*^9, 3.923757924398569*^9, {3.9237580073292847`*^9, 
   3.923758036053969*^9}, {3.9237580682932405`*^9, 3.923758091923279*^9}, 
   3.9237581614659243`*^9, 3.9237582010081224`*^9, 3.923759263701839*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAKcriIM6udM/YlzySx5x4j83
gx7BEl3qP0gJTLMqjdY/qbTfTn7T4z/AYMpRKOzpP7B2yWM3s+0/LAT9N28Z
6z+foVZdQ33jP7pFqi1Y3uw/Zo62q/K+5z+R31hlpIHXPyofgqrRq9A/YhBY
ObTI1j/bEyS2u4fsP6pNh7kiM+4/cqKL+c787D+OMauKj2boPzahbYd/k+w/
mhf6v6J35j++Z1ImSHrSPxb6qjQ9Ou0/zwDS20pQ6T+UkOwFZbDdPxR/UN+a
nuQ/pu7utUmj6T/PqwhdMzvsP6aRB499bu4/nlclWBjd7T8sjs8R863qPxB5
eHp1XOw/GdPeY4gD7j+Zjjtq8NTuP7zYwX+YzOk/j3wuM86Q7D9Z/O+dn/jt
P0DQJrLu7O0/1BngTIfz6z99qgFsi7TlP4d8uZUaPN4/QrWCGhqH5j8FR+0u
C2LqP+J9NQcnGuI/6hHpsQI36D9cSA7Tt2LrP8uvemQFK+c/H0kIFxEU6z+n
AHe6WxbtPxIbwrM=
   "], {{0, 0}, {4, 4}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{3.5, 
       FormBox["1", TraditionalForm]}, {2.5, 
       FormBox["2", TraditionalForm]}, {1.5, 
       FormBox["3", TraditionalForm]}, {0.5, 
       FormBox["4", TraditionalForm]}}, {{3.5, 
       FormBox["1", TraditionalForm]}, {2.5, 
       FormBox["2", TraditionalForm]}, {1.5, 
       FormBox["3", TraditionalForm]}, {0.5, 
       FormBox["4", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.923756003071441*^9, 3.9237563345125775`*^9, 3.923756534538599*^9, 
   3.923757281176355*^9, {3.92375776983307*^9, 3.9237577970415993`*^9}, 
   3.923757851591174*^9, 3.923757924398569*^9, {3.9237580073292847`*^9, 
   3.923758036053969*^9}, {3.9237580682932405`*^9, 3.923758091923279*^9}, 
   3.9237581614659243`*^9, 3.9237582010081224`*^9, 3.9237592637320347`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
+Q==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
wnj5N78xzbJ2TalSD14sjZGU8x6DU+o+FfE33ZDb4acdITOO7BjXY1+8u9G2
7GNTUNk4UrVd6eMK3XhwA+o9zhNYPnNEct2LLjgVrpGbPzkBxxbFZ9KeXTgd
lXWmLX8Sr70WcmdLd6Ggb/51GTMhitakN4uXsBCTEeXasVOI+CPxl04Vs+Bh
xdG4bylEs8pB89EHLMwrK3tgbkfee0g+4xawcD5xT1WcmxDDY8d8Wm+z4Lnm
Gl8qSIhj/650un+dhUWRs7ZN/UeI9Z0xSbvPsjCpHzrj8x0h1L5dlmg4w0Ir
p7vxn7tCWDSrBpqeZiHJ7qHTliIhqqgRuw1hLAiXWPlHlQmxpZg/bUkgC20N
iTfEm4ToamYMJg6x8DR62L2pRYiPzuLpgV4sJP/t8lfOFyGaEl0m+AdZML21
vGRThxAnfmu8pDxYeHay9sOZfiEkz280+OjMQsqy1YmWg0IEiI2k7HBiwbcr
3UaVJ8TxVoehij0saJkd6SwfEpJ9trhfas+ChGhzbtKwEILecSk9Oxa+P/r7
kOtvIcT8og7et2Wh7FDOCp0JUn/Pz7daNixcXSj9UygU4pWZo0qOFQv/AeDp
2bg=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {0., 0.7357588736271223}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.923756003071441*^9, 3.9237563345125775`*^9, 3.923756534538599*^9, 
   3.923757281176355*^9, {3.92375776983307*^9, 3.9237577970415993`*^9}, 
   3.923757851591174*^9, 3.923757924398569*^9, {3.9237580073292847`*^9, 
   3.923758036053969*^9}, {3.9237580682932405`*^9, 3.923758091923279*^9}, 
   3.9237581614659243`*^9, 3.9237582010081224`*^9, 3.9237592637820063`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"E2", ",", "\[Psi]2"}], "}"}], "=", 
  RowBox[{"ExploreN", "[", "2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"E3", ",", "\[Psi]3"}], "}"}], "=", 
  RowBox[{"ExploreN", "[", "3", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"E4", ",", "\[Psi]4"}], "}"}], "=", 
  RowBox[{"ExploreN", "[", "4", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"E5", ",", "\[Psi]5"}], "}"}], "=", 
  RowBox[{"ExploreN", "[", "5", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"E6", ",", "\[Psi]6"}], "}"}], "=", 
  RowBox[{"ExploreN", "[", "6", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"E7", ",", "\[Psi]7"}], "}"}], "=", 
  RowBox[{"ExploreN", "[", "7", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"E8", ",", "\[Psi]8"}], "}"}], "=", 
  RowBox[{"ExploreN", "[", "8", "]"}]}]}], "Input",
 CellChangeTimes->{{3.923757189437574*^9, 3.9237571895255127`*^9}, {
   3.9237572370555716`*^9, 3.9237572386677723`*^9}, 3.923757468444005*^9, {
   3.9237576397919397`*^9, 3.923757646191436*^9}, {3.923757686646428*^9, 
   3.9237576986168675`*^9}, 3.923757755465355*^9, {3.9237587063762302`*^9, 
   3.9237587385146675`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.99999654860400979935967792173752441154`16."}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.60637081076595524460126403773248211198`13.878072633933902", ",", 
     "0.73575399806517811553713591582675586776`13.878072633933902", ",", 
     "1.99235550373497338428715952740142878359`13.878072633933902", ",", 
     "0.60913090584998799854555133809443070984`13.878072633933902"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.923757239686448*^9, 3.9237572507656546`*^9}, 
   3.9237572811353207`*^9, {3.9237573536241045`*^9, 3.9237574152243843`*^9}, 
   3.9237574691242657`*^9, {3.923757526724123*^9, 3.923757582764264*^9}, {
   3.923757620364417*^9, 3.9237576464412594`*^9}, {3.92375769502777*^9, 
   3.923757708771412*^9}, {3.923757755921259*^9, 3.923757762431083*^9}, 
   3.9237580652630033`*^9, {3.9237586861542253`*^9, 3.923758738804247*^9}, 
   3.923759263801899*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.99999973918475124144523515254775496121`16."}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.47764659027288148634711378533931033396`13.209597999898845", ",", 
     "0.68455336192616501956410201564571218049`13.209597999898845", ",", 
     "0.73576129396690953559907318230828041424`13.209597999898845", ",", 
     "1.99752144495090794598672231454099299272`13.209597999898845", ",", 
     "0.9562320530872173380362219012894133113`13.209597999898845", ",", 
     "0.34251122953366001826374072981660447355`13.209597999898845"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.923757239686448*^9, 3.9237572507656546`*^9}, 
   3.9237572811353207`*^9, {3.9237573536241045`*^9, 3.9237574152243843`*^9}, 
   3.9237574691242657`*^9, {3.923757526724123*^9, 3.923757582764264*^9}, {
   3.923757620364417*^9, 3.9237576464412594`*^9}, {3.92375769502777*^9, 
   3.923757708771412*^9}, {3.923757755921259*^9, 3.923757762431083*^9}, 
   3.9237580652630033`*^9, {3.9237586861542253`*^9, 3.923758738804247*^9}, 
   3.9237592638119497`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.99999995979624925158958910257973069274`16."}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.38938628719070311685474054343409927032`12.731258489010845", ",", 
     "0.60652915295833423548093663286329893404`12.731258489010845", ",", 
     "0.70855073010565855845944108171257383624`12.731258489010845", ",", 
     "0.7357599210025568920907219255670439763`12.731258489010845", ",", 
     "1.99890669944346025821475691311452935867`12.731258489010845", ",", 
     "1.16857375327089653384995220491844549471`12.731258489010845", ",", 
     "0.60663778685479119659835549820000339517`12.731258489010845", ",", 
     "0.23621977841733415661835601576725561235`12.731258489010845"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.923757239686448*^9, 3.9237572507656546`*^9}, 
   3.9237572811353207`*^9, {3.9237573536241045`*^9, 3.9237574152243843`*^9}, 
   3.9237574691242657`*^9, {3.923757526724123*^9, 3.923757582764264*^9}, {
   3.923757620364417*^9, 3.9237576464412594`*^9}, {3.92375769502777*^9, 
   3.923757708771412*^9}, {3.923757755921259*^9, 3.923757762431083*^9}, 
   3.9237580652630033`*^9, {3.9237586861542253`*^9, 3.923758738804247*^9}, 
   3.9237592638119497`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.99999999074954592598081666311412549299`16."}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.32748627713352356765576411097216031855`12.355566308715805", ",", 
     "0.53625530071983261978605389182488440772`12.355566308715805", ",", 
     "0.65857425504787601127489215649704958531`12.355566308715805", ",", 
     "0.71892685823145178074550791755094190356`12.355566308715805", ",", 
     "0.73575934336518736308415532856533702744`12.355566308715805", ",", 
     "1.99942499562308184979703359905114241146`12.355566308715805", ",", 
     "1.3101627537413018459607860591005985891`12.355566308715805", ",", 
     "0.80443916660880035715546051916320585422`12.355566308715805", ",", 
     "0.43907029708067967829715174895379652325`12.355566308715805", ",", 
     "0.17974177969803098079254869917197643328`12.355566308715805"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.923757239686448*^9, 3.9237572507656546`*^9}, 
   3.9237572811353207`*^9, {3.9237573536241045`*^9, 3.9237574152243843`*^9}, 
   3.9237574691242657`*^9, {3.923757526724123*^9, 3.923757582764264*^9}, {
   3.923757620364417*^9, 3.9237576464412594`*^9}, {3.92375769502777*^9, 
   3.923757708771412*^9}, {3.923757755921259*^9, 3.923757762431083*^9}, 
   3.9237580652630033`*^9, {3.9237586861542253`*^9, 3.923758738804247*^9}, 
   3.923759263831953*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.99999999724211574171676144550015840005`16."}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.28215759247161937128039059518079572646`12.045971722211858", ",", 
     "0.47768715114209000962626174066024574214`12.045971722211858", ",", 
     "0.60653077137035525233045241733760245881`12.045971722211858", ",", 
     "0.68455639061580586503481496617490451891`12.045971722211858", ",", 
     "0.72433061161842616836215096287402851107`12.045971722211858", ",", 
     "0.73575911227935934902726903148169430747`12.045971722211858", ",", 
     "1.99966116556007250740367955704026892612`12.045971722211858", ",", 
     "1.41091580480766606222668282995211981488`12.045971722211858", ",", 
     "0.95540666129609209910917534258591284349`12.045971722211858", ",", 
     "0.60654289663485006414394362418989090375`12.045971722211858", ",", 
     "0.34228498479516603075358696186442017035`12.045971722211858", ",", 
     "0.14487022383483299484434720949626349914`12.045971722211858"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.923757239686448*^9, 3.9237572507656546`*^9}, 
   3.9237572811353207`*^9, {3.9237573536241045`*^9, 3.9237574152243843`*^9}, 
   3.9237574691242657`*^9, {3.923757526724123*^9, 3.923757582764264*^9}, {
   3.923757620364417*^9, 3.9237576464412594`*^9}, {3.92375769502777*^9, 
   3.923757708771412*^9}, {3.923757755921259*^9, 3.923757762431083*^9}, 
   3.9237580652630033`*^9, {3.9237586861542253`*^9, 3.923758738804247*^9}, 
   3.923759263842173*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9999999990140400049631018546387678523`16."}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.24767776004090663460845112704029962904`11.782746587750834", ",", 
     "0.42941537293720668223206191813378824873`11.782746587750834", ",", 
     "0.55837638323268168803810210592908856001`11.782746587750834", ",", 
     "0.64539225372221289886215268877881077613`11.782746587750834", ",", 
     "0.69934536536781070898266934948345860578`11.782746587750834", ",", 
     "0.72749645142356980413237759275396773373`11.782746587750834", ",", 
     "0.7357590088640752244296557351335628138`11.782746587750834", ",", 
     "1.99978381777984658309843467072688609128`11.782746587750834", ",", 
     "1.48614787548329773113821595291069779441`11.782746587750834", ",", 
     "1.07355860489308475849917229682100978021`11.782746587750834", ",", 
     "0.74450935371496985129270492654468665356`11.782746587750834", ",", 
     "0.48404857041540558309624018097323190317`11.782746587750834", ",", 
     "0.27974122792750769212995348771914675803`11.782746587750834", ",", 
     "0.12125144945342627494514950153054390672`11.782746587750834"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.923757239686448*^9, 3.9237572507656546`*^9}, 
   3.9237572811353207`*^9, {3.9237573536241045`*^9, 3.9237574152243843`*^9}, 
   3.9237574691242657`*^9, {3.923757526724123*^9, 3.923757582764264*^9}, {
   3.923757620364417*^9, 3.9237576464412594`*^9}, {3.92375769502777*^9, 
   3.923757708771412*^9}, {3.923757755921259*^9, 3.923757762431083*^9}, 
   3.9237580652630033`*^9, {3.9237586861542253`*^9, 3.923758738804247*^9}, 
   3.9237592638543034`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.99999999959679811326603365846488029191`16."}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.22062325101973039224839215438402809588`11.553872048994352", ",", 
     "0.38940025496740845179611652393967021806`11.553872048994352", ",", 
     "0.51546698168622045530952330740094343484`11.553872048994352", ",", 
     "0.60653072099662737003343072494254664014`11.553872048994352", ",", 
     "0.66907686136249130669953138786917040039`11.553872048994352", ",", 
     "0.70854991197848390827496379508421860056`11.553872048994352", ",", 
     "0.72950861941044966534468097897605599639`11.553872048994352", ",", 
     "0.73575895747057623674374657693666903032`11.553872048994352", ",", 
     "1.99985373693562307065303951365695872967`11.553872048994352", ",", 
     "1.54441762079273645229577958011185368403`11.553872048994352", ",", 
     "1.16821412465698454466712492120868994402`11.553872048994352", ",", 
     "0.85911654182349812629316896440632520847`11.553872048994352", ",", 
     "0.60653363263852085808534927301684336622`11.553872048994352", ",", 
     "0.40144826482978289459681996446642995086`11.553872048994352", ",", 
     "0.23618495296373672404639394157486189135`11.553872048994352", ",", 
     "0.10421665518455360503705973768613432894`11.553872048994352"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.923757239686448*^9, 3.9237572507656546`*^9}, 
   3.9237572811353207`*^9, {3.9237573536241045`*^9, 3.9237574152243843`*^9}, 
   3.9237574691242657`*^9, {3.923757526724123*^9, 3.923757582764264*^9}, {
   3.923757620364417*^9, 3.9237576464412594`*^9}, {3.92375769502777*^9, 
   3.923757708771412*^9}, {3.923757755921259*^9, 3.923757762431083*^9}, 
   3.9237580652630033`*^9, {3.9237586861542253`*^9, 3.923758738804247*^9}, 
   3.9237592638772717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"renderN", "[", 
       RowBox[{"\[Psi]8", ",", "8", ",", "r"}], "]"}], "-", 
      RowBox[{"\[Psi]exact", "[", "r", "]"}]}], ",", 
     RowBox[{
      RowBox[{"renderN", "[", 
       RowBox[{"\[Psi]6", ",", "6", ",", "r"}], "]"}], "-", 
      RowBox[{"\[Psi]exact", "[", "r", "]"}]}], ",", 
     RowBox[{
      RowBox[{"renderN", "[", 
       RowBox[{"\[Psi]4", ",", "4", ",", "r"}], "]"}], "-", 
      RowBox[{"\[Psi]exact", "[", "r", "]"}]}], ",", 
     RowBox[{
      RowBox[{"renderN", "[", 
       RowBox[{"\[Psi]2", ",", "2", ",", "r"}], "]"}], "-", 
      RowBox[{"\[Psi]exact", "[", "r", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", 
     RowBox[{"3", "/", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.880722, 0.611041, 0.142051], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.587148, 0.40736066666666665`, 0.09470066666666668],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0.880722, 0.611041, 0.142051]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.880722, 0.611041, 0.142051]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.880722, 0.611041, 0.142051],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.560181, 0.691569, 0.194885], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.37345400000000006`, 0.461046, 0.12992333333333334`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0.560181, 0.691569, 0.194885]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.560181, 0.691569, 0.194885]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.560181, 0.691569, 0.194885],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.922526, 0.385626, 0.209179], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6150173333333333, 0.25708400000000003`, 0.13945266666666667`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0.922526, 0.385626, 0.209179]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.922526, 0.385626, 0.209179]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.922526, 0.385626, 0.209179],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.528488, 0.470624, 0.701351], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3523253333333333, 0.3137493333333333, 0.46756733333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0.528488, 0.470624, 0.701351]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.528488, 0.470624, 0.701351]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.528488, 0.470624, 0.701351],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<N=8\>\"", ",", "\"\<N=6\>\"", ",", "\"\<N=4\>\"", ",", 
          "\"\<N=2\>\""}], "}"}], ",", 
        RowBox[{"LegendLayout", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Column\>\"", ",", "2"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9237588004065084`*^9, 3.9237588386212964`*^9}, {
  3.9237588744676385`*^9, 3.923758940357344*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
g5iGgUbGd8rWe9oFAoGxwai5j6OJ2s/l0L4LwM1rukdwKWUat02WH/zqsNoV
oYR57QNbb3hh6rzZ4wzmoattj0PUiIZLShg65rOnOSifXJNbx0S7HrPQg8tn
B6UWVKDVlistIdap2ksvf6FM/6VZZ0sWS8rqN/zDfP1hmiNpzOGKf8fXTOXC
+9c7kzW3GxYqyFGmPdNmuJP33Vvn7p9A9+z94EtSLQSUP/qigyYvn2M9T034
CERgf/eKff4kb/rGF9ObmL/ScwwgZv5BcvRKyvXX7nnQCS+71ckbzVhvSTYG
EldBkdHPI5jvyYgIIivTpyWFpyir6SfJBZMOqWcWymz3WZasE28LJlu2RPWG
rKSc5S8wE0Le3HEQytt0H8/LCAwlSXv26T5VoWyt8JwzjHzX+fNI1JxyvV/D
3zBys69vgaoz5eGqMPdwcsy6Ut3uHM57ozwUThaMJQRGRuJ69uPqEaT6tCsU
paIfZ9+IICd+HPr9PAfdeYoWScQC1u34WYW2NTOMJP5xw6X7unH+paefIonc
0ruTTqO4v49uClFk6MqljXHf0CInTkeRi2t9nMrnPaDWf3U/J4qoFerd6FtM
WXIjsz+KfFXcPDInSdma9+2CaHK1jmflannMoWlzNNFTHzM7qEqZfl1VL5rM
b2tOPaWF9YcdT0eTCv3sboYF2kEzPJrYvTy/pNqFcn3H9KVoInzcVHvQDx3j
mxNNHowrxcyLxnlNb4qjyRkPwdZ1aZg37S+PJut/feY4movrzy8qjSYvAtv2
elRTponL5keTqIW5ASkPMW9/mhlNdiWE1tX1UFb7e+tiNJkQsf35+i3WVz48
F02uZBGlBd/x/Ct320QTrfXLPWXZH1L7jVu6L5r8K/5RrCtIedjLUTKalGzv
mvCRokw7qfoziljfK9lwWYFyvXTxkyiyWCPWoUEN60MfXoki6rl1qht1Kavx
cttHEV+eCRGmDeWsJRbrokjBqeVTf91xvYSe0Ugy/PTQY6cgzItirkQSoS3n
rncyKEvWMnUjycGk3PO7r2GuyMUWSUqMueQFminTlUP0IshozfaF57pwP8m1
0+FEZIXjyJtR3O/f24xwQn99P+k2RwvVr2/RGEZ0Tgb/tNSgTA//MhVCQtrK
OluM0NFvvUNI9aaR/C1OlOtNLb8HE8lvapackdgfojIeRL74/W0sfERZstuJ
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
T/T1BpVjZAH97OZJtj7KMe+GjUm/43gPBzeaRjMxIwXaZhdWLEGnTV+2IBe2
t63dJoZ2uFVoRXRWqjw5IoW2/nffmkgtKPKyk0HLnLpsQ75PSoj7b0FHxpna
kpaei02JymiRLtpxkgY05/y9/7vo4nHictN9SdMhtG3MAjtC4kbu9OuhvYac
7IiAj77NlCnaTrDCjryxaObiPo4eufTBjlTt31ayyhlNhhfakwi5m0Y7PdEG
BsL2xFR42T8dP3TmcV57IjsXftMp+P/9+n22I39HZ4/So9HxC+7ZkWdtJ76n
JKLZvf3syPWK/svF6WjVzWvtiM/lw+oPr6HjsuuOk4MhdR+H8tH3lfYeJ2Iu
cokz5ej9JlW2ZEI/Q5mvDv3DQ9SW3NvFP7K2Ga35ydmGMFbTI1Xa0LIKRdbE
juervGEXWlGrwYpwvewMCBlFT8RvNif9jfvWXZ5AXw9RNiUFeRXt5dPo9Us3
GBPdc8kr3rC/oDylVqFP1tguuP+LF/3AVU+XzGj6uiwRRk8/KDpK0kRNa/es
RZufV9hHXNge25rIoQWaTXcR1Q+7uN23oTv4pjeT0eoVJln70VnmgitBzvj1
zF97NO9v96NweYnq3+hT6KiOAV3gfnKZQ9QbzdnAZwhje4yFtoag1bLSzOD6
xqcKjlfRojzZdiD2r87l6RBl+qh6kjtw3kwdyTTqp/4/N/z2poO39cwHWSt0
0uAXOoyKGXy949CP5z/hHAgNF/lpXd6U6+fttQoC/7NhK7iSKNNfuKqFwNQR
L2O3DuzPGBwIB5sFnVZzvVjv+/pwBHQ0bHaMeoXzft25EwGFSh+9r09innUn
gfV5Kmmb2Mf7kjJvmUI0DH3TblfTpEyPFVgfB3HLe1e76aJjXMLigOyzPJtp
Qpn2NHskDjIZLmv+nqCs1nwy6SLo1Hw7K+eB8zzGPlwE2si5p+bnKGcVRkrE
g7VC5LnaqJf4+b/aNR4ETAQ6xhlYXyyRFA8N9JS1YumUrXcNVMeDVMeNDt98
XH9D7N946PwhK32rHPsrzqxMgKCVFX69tdh/RFA1Ad64NkortWEedPRcAiQl
a/rbd2G/wygzAdSh41nSANaPiZckwPRbo3XNo5SHw7+1JMD1Ra/8v03g+cbs
hhPAYJtDp9R3zDtPzSQAh8WndXpz2K/Ew8MAh4LfnSWLBii//rGZAUu7gtYP
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
yPJ/yN1I2w==
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
8/W7plIEu+aLSUkt/IrrFfVb2ZC0vE8VLcYO37Ylhw3LhAJP6yzHzq6SC2LD
B6mvbk6rsG0PrtFkQ7p+RVvVFuzxaBOne8Bvfvll9zZsmQKr7feAflF0Yngn
tlnrkleFcI7uL7RQgfR3O6xRCGtyT50/dgi7lkvoXz6EzH1cMGSDLdoXppwL
WlejWnPtsNW8973JgQVvVRg37El//3/BOeDRGS6w0hl7+Ojb/mxwSFAQ0/DD
dmioPs8CfSVv1dx00n9NvFUGiF1f6+Y8jE27kfo3AV6N1av8N0rivy/sTIBE
40vz+MbIvE/mG8fDKo2awJxv2HT3T+VxwCNgHTv4l8Tputei4SubXXJgwzdc
HzU2GQp54kYuvJuw6YstjBhgGzd//6A4tto/VkMwvPbUb7guReIVMokB0Ht8
9lH2PmKlyxe8oOKz5rcVRtg0z60mNqDATAxuPUfMcOkzA86uiS3e5sTCzyv0
Iccx3viHLTE9RlkQ4qY/t724Qbxk4YQlEoxXt46+SVx8cMQWhe+LoZ3wJH4U
XX0ZBXio7q33J+vHPIq9hpwX3M7Ijibx1M/Ot9Bk5jtVizvEhvOZHshec9+L
dXeJ57KO0JF18OjKsAxi8FH1RsM7lAq0ssl+7YylfZBxV6gWVz7p7x2xyhfp
8u31vF5MfPNEpx/qKQoR3nWf1Jc5J/ijo6eHS8cqSD3/XosApBET9PlsPTnf
scq+QFS7dyhgVTPxwDrvILT/mezmh22kX++RLcFIbv2g4YFHxAPHT4SgwmqZ
H396Sf6lir4QtN3UL7x0gKy3eespBsqiPd9xZZDkG5g1MpBYmnSL5DDJX7xb
KhQl/edjMfKG5PdbBoUi4bf9cwnvSZyr4UUoivGXuqP3iczrILSZuj9Jesnz
fiP5GTtNmYjZ1vewdZL0b+oIY6IlF7df9P5J6hMrS6j78zJP7v0zpD6yqYuJ
5hU+Sf0xR8wpes5EsDUqqZ82jvtFMQeZ6JYLulTCRSyNrdw2phSxgPhcKOXp
tZGL7LmxazcxKI8b70evl2PTeXwov09+66S7ilj7GuWhEWZey3pstS/GlJ9u
URxRFif9fqlSnnRPzTgoSUzfSZn36ZLzOlKkv/BaylLSTtvOypB+LVyUtfxf
frKWJ/mBH18wkdXQoUIHRdL/XA9lLwW2w839JK5VQrninfePcA0St3Cm3Hr7
vn7MIdLvvjXlp+jz/QQt4khdylMxem5ZR8n6L2UoS2lK/qvUJfUNb6jzUp4y
NqvTJ/2PP6R8ODmirtmAxM0qKNv8mvF5ZEzq14ZRTmZ18by3Iv0/yFIuPM1l
99mGxIuEKVf9U+iYsCXxeVyUB86khM5eIv2UHz6jnjfPNX7+6ySf34qyr63Q
ehU/kn/zxgAT3RY85n4ggLj3DOWUWq8hzSBSf38v5WqhTymnQonX/exnop+t
1Vtso4nNL1O23Wa5KzKT9KcdespEIksix66zSDx7E+UnH+tTDXKIP832MRHK
FxMUKSD7P8ChLLBrZDq7hHivEGWQN6+HBpKv/+gJEzmtiriZ2kTiD7Iob/tZ
K+/bQlx+k3LUfVHW4Q6SzxCnfEF5OKT3MYkzrz5mIkE1U72Pr8l8K373MFG7
aNiKrjckX6OVsue8mpZ7b0l8TSzlj/Uiytc/kPo7cpRrDg6J0CaIeWwfMpHd
kXNjq2gT+LxygPo91Omfvakugk1L2dzORM23V7UeFcWuTXndxkSd3Q8FDcSI
dydTHjikUWgvga22YC3lcYWdrxOkiR0XtVLnt+bfoZ+I9A962MREbv1p/Hmm
pP/V5XVMRBc4Z1pmTlxcXUv9Pk+sya+zJA66TDmiJeTgwHniiY4aJsq+7+Sy
0IGsX+oD1Psae2jIlE7i215VMpGcwcccwVRi90NlTDTcmnx8Lo049VspEzGU
9KbeZpB5LsRRfidcu/9+Npn34xj1fYh/Gf3QkP3/8/ArZiIuS/UfSTVkPYVC
NhP1XI5T2zZE8rdW5TLRJZ9D/SrrJrFP9NylvgfBj96v30DsZU3Z77bx9B8R
7FqzmUQmSkp1XFshhk3ftplyT03SWYXt2LS3DvHU/LM/X0krkXr+uRgmmnFi
jW08Q/xsgPqeBdrwzMyLJPZLo1Pv8wbzfx8Fp3B/l6CzTPTgr//87Uxs2u5N
8kzUXfzfx9CV33F+ZfgCJmoStWlm3Mau9dF+FIp87+ulvl7yA/tazt1QZCw2
aHI2FJsm+9Q8FP0p27Vux6KfeN7d6RKh6Nb8D53RHti1S4s/MNBqcSXzLdSn
i7J1dAYD3bDX/77EFVuN5WHOQOsVrFolbv4i7/cxMwaqnbuaeMCd5MevN2Wg
JaGhGm5exE8fGDNQUl5j1IcgbPrOyTMM1Dwmu6c1ntjM6DgDCVryOvtVkf56
i/cx0IPtG7RTgbj7sRIDmUxuF6muJfnrEhUZKNvrUPP3RtJfTlqBgfaluK+2
6iLznNXZzUAWLz+VHRgi8WjGVgZalPk72GSY1BuflmCg/EuLTN1GSHx67RYG
+vlHbBHnHYkXZYkxULCw0ZlN30hcAjYw0K6R8ztUJsg88T7rGag35/o/gyni
Ua11DCSiFMEK/0Xyfz8WYqAGWvLN/N/ETbFrGMi2Nf9E6x/i88arGWhZeMXm
0Tky77DoKgYqOtP6698/Epd+K8BA/wNWoQrb
        "]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAA+EtunVBvYD4ACJ/IQGbCvYZkJyjP
Jj4/AIjP1nKzoL7N7uRqjSZOPwC8ibhFhrC+8LNDjGwmXj8AFEYb8SzAvoIW
8xxcJm4/AAAaVS/7zr7SslPJkvVwPwBQa9m5PNG+ZNothPfXcj8A+FDSZfHS
voYp4vnAnHY/AHA1NL871r7Lx0rlUyZ+PwDISbsuV9y+rncSUFwEgD8AkPzs
VsXdvneLf62O9YA/AICwgc4p374Is1lo89eCPwDIyGIG6+C+0MbGxSXJgz8A
WIzXAY/hvpnaMyNYuoQ/AFguOFUu4r4qAg7evJyGPwBQVW4zX+O+8hV7O++N
hz8AMGD91fDjvrsp6Jghf4g/AAhZ6/995L5MUcJThmGKPwCAXs4Yi+W+b6B2
yU8mjj8A8JJhpHHnvji04yaCF48/AMDz78fg574AZChCWgSQPwB4S2/PS+i+
yXeVn4z1kD8AsI2etxXpvq4BTM4lbpE/AOBn3q506b6SiwL9vuaRPwBwHC+3
z+m+Wp9vWvHXkj8AACObJ3rqvj4pJomKUJM/AHCn46XJ6r4is9y3I8mTPwDw
bpdhFeu+xFtcSpgPlD+g0w1yYT7rvrHu3v8=
        "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQ7f4vZtZfwaX2Cy7zFiXavd5nty5tLb/JUnsGh5Rf
IXKv99nE8m7LKwXyHxS1Nd59tc+aZ8u+s9uA/AP79zbPerXPIovxQrflMnsG
hd3PTPhe7TNWm/OJ3X65PUND+aSKuy/2GV11+p3WAOQrVMY09rzYZ9DykvnY
QSD/gcG0rZYv9uk9MhNtcVkBtE+F6VTf830a8y6aM3ittGdgEDl2SOXZPhkx
9tofIauB6v+07uN4vE/q6NrW8GlAvsMRQ7v5j/ZJloT0bbsO5C+wa+swebRP
7NLC+SVRa4DyLHsWRT/cJ9Bnc+hD/Fqge5fOe2h5fx8rWxH7y6z1QHnlL5uf
X9/3wrOe//NyIP9A5aoZbNf3nertEf/7BMSXcIxSubbveNflyR36G4D87xtW
xVzZ1y30bvGclSC+4NqfBy/sE1FSPnJk7kage099n3D10D41x14W0bbNQP6R
BNcLW+3EH0/mmLUExD9TMbt5px1H6ywe+cMgvlZlsuleu1cnlotoMmwB8mVm
nfc8ZLc+4JCKbRWIfzpAavZJO4uE7y6peVuB4Vk7X+nPZTvP+sTWrWHbge6X
mJh07IGdUf9Bt4UlQD6D9llN7Yd2MvMVOXongfhJx437H9p92PewK+UcSL1I
N2PoIzthD6Un9rY77C+67u9fvuuxHQAsYO83
        "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQ7f6I6YZJ+1H7i677+5fvemy3Iz9v37oZR+0ZGGay
n/J6bFfT92Cj81Ugv+G/wNE9D+2YzxyZket3DCgfIbX+6x07QffetIMOx4H8
GJM1z8/auazcY68dCOLfW7zz3Wm7Cu43ElMTQfxDDpc/n7R7cN7rdEYTiN/X
3P7jqN2GCA4DgSMgfgaHwN3ddgFZzT/j3E8A+Ruq/7+dtG9Cb2XPH9+TQL7P
u/kTLu478n5FalociC9TenfypX0/Am/YXcgD8a1bc6dd3pcgZv5xcT+IX8nn
OfPqPoP5X0K9L4L4ruFOU27uu7AhX35WyCmgf4T/Hl7xYB+L8PwfzKlAPkNY
V7Diw30Wpecu5paC5N/s5J35cN8CS90Wx2kg+dzyB62P9hUcevXixXUQv2qT
YMiTfQJXUjeZR58G8i8u5dj9fJ/DW8dXIdlAfkNvXaTCi30FbHJKRdUgftKc
0JYX+y5aXJu4ZjZI/detOh4v902a61aoeAck38Iev+/VvkPblFbavQHxv7AL
S7zed9h4eaHD59P2Cy7zFiXavd4HAAxb0gY=
        "]], LineBox[CompressedData["
1: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
        "]]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[{{3.0612244897959183`*^-8, -2.34015108603152*^-10}, {
        0.00046007688083944014`, -3.4982956629900754`*^-6}, {
        0.0009201231494339823, -6.95895673952316*^-6}, {
        0.0017351019644565324`, -0.000012990796280235213`}}], 
       LineBox[{{0.5765050498910089, -0.000012990796280235213`}, {
        0.5803609035439714, -8.078363132102417*^-6}, {
        0.580862626609112, -7.470009818266732*^-6}, {
        0.5813643496742527, -6.865528201283055*^-6}, {
        0.582367795804534, -5.668149427928704*^-6}, {
        0.5843746880650966, -3.3195136948105386`*^-6}, {0.5883884725862218, 
        1.1950227212231823`*^-6}, {0.5888901956513625, 
        1.742362947143583*^-6}, {0.5893919187165031, 2.285957290681928*^-6}, {
        0.5903953648467845, 3.3619407511231714`*^-6}, {0.5924022571073471, 
        5.469315184081225*^-6}, {0.5963166805693342, 9.407577174077888*^-6}}],
        LineBox[CompressedData["
1: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
        "]], 
       LineBox[{{0.37976652051698534`, 9.407577174077888*^-6}, {
        0.38683958252882256`, -0.000012990796280235213`}}], 
       LineBox[{{0.14178407927060574`, -0.000012990796280235213`}, {
        0.1485552102717217, 9.407577174077888*^-6}}]}}, {}, {}}, InsetBox[
     TemplateBox[{"\"N=8\"","\"N=6\"","\"N=4\"","\"N=2\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", "2"}], "}"}]}]}], "]"}]& )], 
     Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->NCache[{{0, 
       Rational[3, 2]}, {-0.000012990796280235213`, 
      9.407577174077888*^-6}}, {{0, 1.5}, {-0.000012990796280235213`, 
      9.407577174077888*^-6}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         Line[CompressedData["
1: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
g5iGgUbGd8rWe9oFAoGxwai5j6OJ2s/l0L4LwM1rukdwKWUat02WH/zqsNoV
oYR57QNbb3hh6rzZ4wzmoattj0PUiIZLShg65rOnOSifXJNbx0S7HrPQg8tn
B6UWVKDVlistIdap2ksvf6FM/6VZZ0sWS8rqN/zDfP1hmiNpzOGKf8fXTOXC
+9c7kzW3GxYqyFGmPdNmuJP33Vvn7p9A9+z94EtSLQSUP/qigyYvn2M9T034
CERgf/eKff4kb/rGF9ObmL/ScwwgZv5BcvRKyvXX7nnQCS+71ckbzVhvSTYG
EldBkdHPI5jvyYgIIivTpyWFpyir6SfJBZMOqWcWymz3WZasE28LJlu2RPWG
rKSc5S8wE0Le3HEQytt0H8/LCAwlSXv26T5VoWyt8JwzjHzX+fNI1JxyvV/D
3zBys69vgaoz5eGqMPdwcsy6Ut3uHM57ozwUThaMJQRGRuJ69uPqEaT6tCsU
paIfZ9+IICd+HPr9PAfdeYoWScQC1u34WYW2NTOMJP5xw6X7unH+paefIonc
0ruTTqO4v49uClFk6MqljXHf0CInTkeRi2t9nMrnPaDWf3U/J4qoFerd6FtM
WXIjsz+KfFXcPDInSdma9+2CaHK1jmflannMoWlzNNFTHzM7qEqZfl1VL5rM
b2tOPaWF9YcdT0eTCv3sboYF2kEzPJrYvTy/pNqFcn3H9KVoInzcVHvQDx3j
mxNNHowrxcyLxnlNb4qjyRkPwdZ1aZg37S+PJut/feY4movrzy8qjSYvAtv2
elRTponL5keTqIW5ASkPMW9/mhlNdiWE1tX1UFb7e+tiNJkQsf35+i3WVz48
F02uZBGlBd/x/Ct320QTrfXLPWXZH1L7jVu6L5r8K/5RrCtIedjLUTKalGzv
mvCRokw7qfoziljfK9lwWYFyvXTxkyiyWCPWoUEN60MfXoki6rl1qht1Kavx
cttHEV+eCRGmDeWsJRbrokjBqeVTf91xvYSe0Ugy/PTQY6cgzItirkQSoS3n
rncyKEvWMnUjycGk3PO7r2GuyMUWSUqMueQFminTlUP0IshozfaF57pwP8m1
0+FEZIXjyJtR3O/f24xwQn99P+k2RwvVr2/RGEZ0Tgb/tNSgTA//MhVCQtrK
OluM0NFvvUNI9aaR/C1OlOtNLb8HE8lvapackdgfojIeRL74/W0sfERZstuJ
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
T/T1BpVjZAH97OZJtj7KMe+GjUm/43gPBzeaRjMxIwXaZhdWLEGnTV+2IBe2
t63dJoZ2uFVoRXRWqjw5IoW2/nffmkgtKPKyk0HLnLpsQ75PSoj7b0FHxpna
kpaei02JymiRLtpxkgY05/y9/7vo4nHictN9SdMhtG3MAjtC4kbu9OuhvYac
7IiAj77NlCnaTrDCjryxaObiPo4eufTBjlTt31ayyhlNhhfakwi5m0Y7PdEG
BsL2xFR42T8dP3TmcV57IjsXftMp+P/9+n22I39HZ4/So9HxC+7ZkWdtJ76n
JKLZvf3syPWK/svF6WjVzWvtiM/lw+oPr6HjsuuOk4MhdR+H8tH3lfYeJ2Iu
cokz5ej9JlW2ZEI/Q5mvDv3DQ9SW3NvFP7K2Ga35ydmGMFbTI1Xa0LIKRdbE
juervGEXWlGrwYpwvewMCBlFT8RvNif9jfvWXZ5AXw9RNiUFeRXt5dPo9Us3
GBPdc8kr3rC/oDylVqFP1tguuP+LF/3AVU+XzGj6uiwRRk8/KDpK0kRNa/es
RZufV9hHXNge25rIoQWaTXcR1Q+7uN23oTv4pjeT0eoVJln70VnmgitBzvj1
zF97NO9v96NweYnq3+hT6KiOAV3gfnKZQ9QbzdnAZwhje4yFtoag1bLSzOD6
xqcKjlfRojzZdiD2r87l6RBl+qh6kjtw3kwdyTTqp/4/N/z2poO39cwHWSt0
0uAXOoyKGXy949CP5z/hHAgNF/lpXd6U6+fttQoC/7NhK7iSKNNfuKqFwNQR
L2O3DuzPGBwIB5sFnVZzvVjv+/pwBHQ0bHaMeoXzft25EwGFSh+9r09innUn
gfV5Kmmb2Mf7kjJvmUI0DH3TblfTpEyPFVgfB3HLe1e76aJjXMLigOyzPJtp
Qpn2NHskDjIZLmv+nqCs1nwy6SLo1Hw7K+eB8zzGPlwE2si5p+bnKGcVRkrE
g7VC5LnaqJf4+b/aNR4ETAQ6xhlYXyyRFA8N9JS1YumUrXcNVMeDVMeNDt98
XH9D7N946PwhK32rHPsrzqxMgKCVFX69tdh/RFA1Ad64NkortWEedPRcAiQl
a/rbd2G/wygzAdSh41nSANaPiZckwPRbo3XNo5SHw7+1JMD1Ra/8v03g+cbs
hhPAYJtDp9R3zDtPzSQAh8WndXpz2K/Ew8MAh4LfnSWLBii//rGZAUu7gtYP
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
yPJ/yN1I2w==
          "]]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.560181, 0.691569, 0.194885]], 
         Line[CompressedData["
1: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
8/W7plIEu+aLSUkt/IrrFfVb2ZC0vE8VLcYO37Ylhw3LhAJP6yzHzq6SC2LD
B6mvbk6rsG0PrtFkQ7p+RVvVFuzxaBOne8Bvfvll9zZsmQKr7feAflF0Yngn
tlnrkleFcI7uL7RQgfR3O6xRCGtyT50/dgi7lkvoXz6EzH1cMGSDLdoXppwL
WlejWnPtsNW8973JgQVvVRg37El//3/BOeDRGS6w0hl7+Ojb/mxwSFAQ0/DD
dmioPs8CfSVv1dx00n9NvFUGiF1f6+Y8jE27kfo3AV6N1av8N0rivy/sTIBE
40vz+MbIvE/mG8fDKo2awJxv2HT3T+VxwCNgHTv4l8Tputei4SubXXJgwzdc
HzU2GQp54kYuvJuw6YstjBhgGzd//6A4tto/VkMwvPbUb7guReIVMokB0Ht8
9lH2PmKlyxe8oOKz5rcVRtg0z60mNqDATAxuPUfMcOkzA86uiS3e5sTCzyv0
Iccx3viHLTE9RlkQ4qY/t724Qbxk4YQlEoxXt46+SVx8cMQWhe+LoZ3wJH4U
XX0ZBXio7q33J+vHPIq9hpwX3M7Ijibx1M/Ot9Bk5jtVizvEhvOZHshec9+L
dXeJ57KO0JF18OjKsAxi8FH1RsM7lAq0ssl+7YylfZBxV6gWVz7p7x2xyhfp
8u31vF5MfPNEpx/qKQoR3nWf1Jc5J/ijo6eHS8cqSD3/XosApBET9PlsPTnf
scq+QFS7dyhgVTPxwDrvILT/mezmh22kX++RLcFIbv2g4YFHxAPHT4SgwmqZ
H396Sf6lir4QtN3UL7x0gKy3eespBsqiPd9xZZDkG5g1MpBYmnSL5DDJX7xb
KhQl/edjMfKG5PdbBoUi4bf9cwnvSZyr4UUoivGXuqP3iczrILSZuj9Jesnz
fiP5GTtNmYjZ1vewdZL0b+oIY6IlF7df9P5J6hMrS6j78zJP7v0zpD6yqYuJ
5hU+Sf0xR8wpes5EsDUqqZ82jvtFMQeZ6JYLulTCRSyNrdw2phSxgPhcKOXp
tZGL7LmxazcxKI8b70evl2PTeXwov09+66S7ilj7GuWhEWZey3pstS/GlJ9u
URxRFif9fqlSnnRPzTgoSUzfSZn36ZLzOlKkv/BaylLSTtvOypB+LVyUtfxf
frKWJ/mBH18wkdXQoUIHRdL/XA9lLwW2w839JK5VQrninfePcA0St3Cm3Hr7
vn7MIdLvvjXlp+jz/QQt4khdylMxem5ZR8n6L2UoS2lK/qvUJfUNb6jzUp4y
NqvTJ/2PP6R8ODmirtmAxM0qKNv8mvF5ZEzq14ZRTmZ18by3Iv0/yFIuPM1l
99mGxIuEKVf9U+iYsCXxeVyUB86khM5eIv2UHz6jnjfPNX7+6ySf34qyr63Q
ehU/kn/zxgAT3RY85n4ggLj3DOWUWq8hzSBSf38v5WqhTymnQonX/exnop+t
1Vtso4nNL1O23Wa5KzKT9KcdespEIksix66zSDx7E+UnH+tTDXKIP832MRHK
FxMUKSD7P8ChLLBrZDq7hHivEGWQN6+HBpKv/+gJEzmtiriZ2kTiD7Iob/tZ
K+/bQlx+k3LUfVHW4Q6SzxCnfEF5OKT3MYkzrz5mIkE1U72Pr8l8K373MFG7
aNiKrjckX6OVsue8mpZ7b0l8TSzlj/Uiytc/kPo7cpRrDg6J0CaIeWwfMpHd
kXNjq2gT+LxygPo91Omfvakugk1L2dzORM23V7UeFcWuTXndxkSd3Q8FDcSI
dydTHjikUWgvga22YC3lcYWdrxOkiR0XtVLnt+bfoZ+I9A962MREbv1p/Hmm
pP/V5XVMRBc4Z1pmTlxcXUv9Pk+sya+zJA66TDmiJeTgwHniiY4aJsq+7+Sy
0IGsX+oD1Psae2jIlE7i215VMpGcwcccwVRi90NlTDTcmnx8Lo049VspEzGU
9KbeZpB5LsRRfidcu/9+Npn34xj1fYh/Gf3QkP3/8/ArZiIuS/UfSTVkPYVC
NhP1XI5T2zZE8rdW5TLRJZ9D/SrrJrFP9NylvgfBj96v30DsZU3Z77bx9B8R
7FqzmUQmSkp1XFshhk3ftplyT03SWYXt2LS3DvHU/LM/X0krkXr+uRgmmnFi
jW08Q/xsgPqeBdrwzMyLJPZLo1Pv8wbzfx8Fp3B/l6CzTPTgr//87Uxs2u5N
8kzUXfzfx9CV33F+ZfgCJmoStWlm3Mau9dF+FIp87+ulvl7yA/tazt1QZCw2
aHI2FJsm+9Q8FP0p27Vux6KfeN7d6RKh6Nb8D53RHti1S4s/MNBqcSXzLdSn
i7J1dAYD3bDX/77EFVuN5WHOQOsVrFolbv4i7/cxMwaqnbuaeMCd5MevN2Wg
JaGhGm5exE8fGDNQUl5j1IcgbPrOyTMM1Dwmu6c1ntjM6DgDCVryOvtVkf56
i/cx0IPtG7RTgbj7sRIDmUxuF6muJfnrEhUZKNvrUPP3RtJfTlqBgfaluK+2
6iLznNXZzUAWLz+VHRgi8WjGVgZalPk72GSY1BuflmCg/EuLTN1GSHx67RYG
+vlHbBHnHYkXZYkxULCw0ZlN30hcAjYw0K6R8ztUJsg88T7rGag35/o/gyni
Ua11DCSiFMEK/0Xyfz8WYqAGWvLN/N/ETbFrGMi2Nf9E6x/i88arGWhZeMXm
0Tky77DoKgYqOtP6698/Epd+K8BA/wNWoQrb
          "]]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.922526, 0.385626, 0.209179]], 
         Line[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAA+EtunVBvYD4ACJ/IQGbCvYZkJyjP
Jj4/AIjP1nKzoL7N7uRqjSZOPwC8ibhFhrC+8LNDjGwmXj8AFEYb8SzAvoIW
8xxcJm4/AAAaVS/7zr7SslPJkvVwPwBQa9m5PNG+ZNothPfXcj8A+FDSZfHS
voYp4vnAnHY/AHA1NL871r7Lx0rlUyZ+PwDISbsuV9y+rncSUFwEgD8AkPzs
VsXdvneLf62O9YA/AICwgc4p374Is1lo89eCPwDIyGIG6+C+0MbGxSXJgz8A
WIzXAY/hvpnaMyNYuoQ/AFguOFUu4r4qAg7evJyGPwBQVW4zX+O+8hV7O++N
hz8AMGD91fDjvrsp6Jghf4g/AAhZ6/995L5MUcJThmGKPwCAXs4Yi+W+b6B2
yU8mjj8A8JJhpHHnvji04yaCF48/AMDz78fg574AZChCWgSQPwB4S2/PS+i+
yXeVn4z1kD8AsI2etxXpvq4BTM4lbpE/AOBn3q506b6SiwL9vuaRPwBwHC+3
z+m+Wp9vWvHXkj8AACObJ3rqvj4pJomKUJM/AHCn46XJ6r4is9y3I8mTPwDw
bpdhFeu+xFtcSpgPlD+g0w1yYT7rvrHu3v8=
          "]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGBQAGIQ7f4vZtZfwaX2Cy7zFiXavd5nty5tLb/JUnsGh5Rf
IXKv99nE8m7LKwXyHxS1Nd59tc+aZ8u+s9uA/AP79zbPerXPIovxQrflMnsG
hd3PTPhe7TNWm/OJ3X65PUND+aSKuy/2GV11+p3WAOQrVMY09rzYZ9DykvnY
QSD/gcG0rZYv9uk9MhNtcVkBtE+F6VTf830a8y6aM3ittGdgEDl2SOXZPhkx
9tofIauB6v+07uN4vE/q6NrW8GlAvsMRQ7v5j/ZJloT0bbsO5C+wa+swebRP
7NLC+SVRa4DyLHsWRT/cJ9Bnc+hD/Fqge5fOe2h5fx8rWxH7y6z1QHnlL5uf
X9/3wrOe//NyIP9A5aoZbNf3nertEf/7BMSXcIxSubbveNflyR36G4D87xtW
xVzZ1y30bvGclSC+4NqfBy/sE1FSPnJk7kage099n3D10D41x14W0bbNQP6R
BNcLW+3EH0/mmLUExD9TMbt5px1H6ywe+cMgvlZlsuleu1cnlotoMmwB8mVm
nfc8ZLc+4JCKbRWIfzpAavZJO4uE7y6peVuB4Vk7X+nPZTvP+sTWrWHbge6X
mJh07IGdUf9Bt4UlQD6D9llN7Yd2MvMVOXongfhJx437H9p92PewK+UcSL1I
N2PoIzthD6Un9rY77C+67u9fvuuxHQAsYO83
          "]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGCQBmIQ7f6I6YZJ+1H7i677+5fvemy3Iz9v37oZR+0ZGGay
n/J6bFfT92Cj81Ugv+G/wNE9D+2YzxyZket3DCgfIbX+6x07QffetIMOx4H8
GJM1z8/auazcY68dCOLfW7zz3Wm7Cu43ElMTQfxDDpc/n7R7cN7rdEYTiN/X
3P7jqN2GCA4DgSMgfgaHwN3ddgFZzT/j3E8A+Ruq/7+dtG9Cb2XPH9+TQL7P
u/kTLu478n5FalociC9TenfypX0/Am/YXcgD8a1bc6dd3pcgZv5xcT+IX8nn
OfPqPoP5X0K9L4L4ruFOU27uu7AhX35WyCmgf4T/Hl7xYB+L8PwfzKlAPkNY
V7Diw30Wpecu5paC5N/s5J35cN8CS90Wx2kg+dzyB62P9hUcevXixXUQv2qT
YMiTfQJXUjeZR58G8i8u5dj9fJ/DW8dXIdlAfkNvXaTCi30FbHJKRdUgftKc
0JYX+y5aXJu4ZjZI/detOh4v902a61aoeAck38Iev+/VvkPblFbavQHxv7AL
S7zed9h4eaHD59P2Cy7zFiXavd4HAAxb0gY=
          "]], 
         Line[CompressedData["
1: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
          "]]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.528488, 0.470624, 0.701351]], 
         Line[{{3.0612244897959183`*^-8, -2.34015108603152*^-10}, {
          0.00046007688083944014`, -3.4982956629900754`*^-6}, {
          0.0009201231494339823, -6.95895673952316*^-6}, {
          0.0017351019644565324`, -0.000012990796280235213`}}], 
         Line[{{0.5765050498910089, -0.000012990796280235213`}, {
          0.5803609035439714, -8.078363132102417*^-6}, {
          0.580862626609112, -7.470009818266732*^-6}, {
          0.5813643496742527, -6.865528201283055*^-6}, {
          0.582367795804534, -5.668149427928704*^-6}, {
          0.5843746880650966, -3.3195136948105386`*^-6}, {0.5883884725862218, 
          1.1950227212231823`*^-6}, {0.5888901956513625, 
          1.742362947143583*^-6}, {0.5893919187165031, 
          2.285957290681928*^-6}, {0.5903953648467845, 
          3.3619407511231714`*^-6}, {0.5924022571073471, 
          5.469315184081225*^-6}, {0.5963166805693342, 
          9.407577174077888*^-6}}], 
         Line[CompressedData["
1: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
          "]], 
         Line[{{0.37976652051698534`, 9.407577174077888*^-6}, {
          0.38683958252882256`, -0.000012990796280235213`}}], 
         Line[{{0.14178407927060574`, -0.000012990796280235213`}, {
          0.1485552102717217, 9.407577174077888*^-6}}]}}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 
         Rational[3, 2]}, {-0.000012990796280235213`, 9.407577174077888*^-6}},
       PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.880722, 0.611041, 0.142051]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.560181, 0.691569, 0.194885]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.922526, 0.385626, 0.209179]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.528488, 0.470624, 0.701351]]}, {
       "N=8", "N=6", "N=4", "N=2"}, LegendMarkers -> None, LabelStyle -> {}, 
       LegendLayout -> {"Column", 2}]], {Right, Top}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.923758841307209*^9, 3.923758905479108*^9, 
  3.923758941182154*^9, 3.923759264132407*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Null", ",", 
     RowBox[{"E2", "+", "1"}], ",", 
     RowBox[{"E3", "+", "1"}], ",", 
     RowBox[{"E4", "+", "1"}], ",", 
     RowBox[{"E5", "+", "1"}], ",", 
     RowBox[{"E6", "+", "1"}], ",", 
     RowBox[{"E7", "+", "1"}], ",", 
     RowBox[{"E8", "+", "1"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"N", ",", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\"\<E\>\"", ",", "1"}], "]"}], "+", "1"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9237590362668777`*^9, 3.9237591463052382`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{2., -12.576731773922841`}, {3., -15.159453539436932`}, {
      4., -17.02930554347455}, {5., -18.49859319754375}, {
      6., -19.708802024270526`}, {7., -20.73740533513391}, {
      8., -21.63158371978262}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["N", TraditionalForm], 
    FormBox[
     RowBox[{
       SubscriptBox["\"E\"", "1"], "+", "1"}], TraditionalForm]},
  AxesOrigin->{0., -22.28879071585309},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 8.}, {-22.134631050108162`, -12.576731773922841`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-20.72326583694641, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.11809565095832, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-22.33270374938051, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-21.927238641272346`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-21.639556568820566`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-21.416413017506358`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-21.234091460712403`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-21.079940780885142`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-20.94640938826062, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-20.82862635260424, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-20.030118656386467`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-19.624653548278303`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-19.33697147582652, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-19.11382792451231, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-18.931506367718356`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-18.7773556878911, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-18.643824295266576`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-18.526041259610192`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-17.72753356339242, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-17.322068455284256`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-17.034386382832476`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.811242831518264`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.62892127472431, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.474770594897052`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.34123920227253, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.223456166616145`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-15.424948470398375`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-15.01948336229021, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-14.73180128983843, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-14.508657738524219`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-14.326336181730264`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-14.172185501903007`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-14.038654109278484`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-13.9208710736221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-13.122363377404328`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-12.716898269296165`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-12.429216196844383`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-12.206072645530174`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-12.02375108873622, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.86960040890896, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.736069016284437`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.618285980628055`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.819778284410283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.41431317630212, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.126631103850338`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{3.9237591466411324`*^9, 3.9237592641876535`*^9}]
}, Open  ]]
},
WindowSize->{759, 834},
WindowMargins->{{Automatic, 459}, {30, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 5027, 165, 341, "Input"],
Cell[5588, 187, 11955, 376, 674, "Input"],
Cell[17546, 565, 18665, 577, 951, "Input"],
Cell[36214, 1144, 4633, 124, 297, "Input"],
Cell[40850, 1270, 1065, 33, 112, "Input"],
Cell[41918, 1305, 3649, 105, 282, "Input"],
Cell[45570, 1412, 4068, 108, 259, "Input"],
Cell[49641, 1522, 3312, 92, 183, "Input"],
Cell[52956, 1616, 2070, 53, 164, "Input"],
Cell[55029, 1671, 2520, 67, 240, "Input"],
Cell[CellGroupData[{
Cell[57574, 1742, 2632, 70, 240, "Input"],
Cell[60209, 1814, 1889, 39, 388, "Output"],
Cell[62101, 1855, 1903, 39, 388, "Output"],
Cell[64007, 1896, 2109, 43, 388, "Output"],
Cell[66119, 1941, 12929, 227, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79085, 2173, 1298, 33, 145, "Input"],
Cell[80386, 2208, 931, 17, 50, "Output"],
Cell[81320, 2227, 1080, 19, 50, "Output"],
Cell[82403, 2248, 1228, 21, 50, "Output"],
Cell[83634, 2271, 1374, 23, 69, "Output"],
Cell[85011, 2296, 1523, 25, 69, "Output"],
Cell[86537, 2323, 1671, 27, 69, "Output"],
Cell[88211, 2352, 1821, 29, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90069, 2386, 8535, 222, 107, "Input"],
Cell[98607, 2610, 151493, 2600, 212, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250137, 5215, 655, 19, 50, "Input"],
Cell[250795, 5236, 17030, 432, 283, "Output"]
}, Open  ]]
}
]
*)

